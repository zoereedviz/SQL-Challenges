-- Challenge can be found at https://8weeksqlchallenge.com/case-study-3/ --

-- A) Sample customer journey --

SELECT S.customer_id,
plan_name,
S.start_date
FROM plans AS P
INNER JOIN subscriptions AS S on P.plan_id = S.plan_id
WHERE s.customer_id IN (1, 2, 11, 13, 15, 16, 18, 19)
ORDER BY s.customer_id ASC, s.start_date ASC;

-- B) Data analysis questions --

-- 1. How many customers has Foodie-Fi ever had?
SELECT COUNT( DISTINCT customer_id)
FROM subscriptions;

-- 2. What is the monthly distribution of trial plan start_date values for our dataset - use the start of the month as the group by value
SELECT month(s.start_date) as month,
COUNT(s.customer_id) as trials_started,
FROM plans AS P
INNER JOIN subscriptions AS S on P.plan_id = S.plan_id
WHERE p.plan_id = 0
GROUP BY month(s.start_date);

-- 3. What plan start_date values occur after the year 2020 for our dataset? Show the breakdown by count of events for each plan_name
SELECT p.plan_name,
COUNT(p.plan_id) AS no_of_plans_started
FROM plans AS P
INNER JOIN subscriptions AS S ON P.plan_id = S.plan_id
WHERE year(s.start_date)>2020
GROUP BY p.plan_name;

-- 4. What is the customer count and percentage of customers who have churned rounded to 1 decimal place?
SELECT (SELECT COUNT(DISTINCT customer_id) FROM subscriptions) AS customers_count,
ROUND(((SELECT COUNT(DISTINCT customer_id) FROM subscriptions WHERE plan_id=4)/(SELECT COUNT(DISTINCT customer_id) FROM subscriptions)*100 ),1) AS churned_customers_percent
FROM subscriptions
LIMIT 1;

-- 5. How many customers have churned straight after their initial free trial - what percentage is this rounded to the nearest whole number?
WITH row_number_cte AS (
SELECT p.plan_name,
s.customer_id,
ROW_NUMBER() OVER(PARTITION BY s.customer_id ORDER BY s.start_date ASC) AS row_number
FROM plans AS P
INNER JOIN subscriptions AS S ON P.plan_id = S.plan_id
ORDER BY s.customer_id, s.start_date) 
SELECT COUNT(DISTINCT customer_id) AS customers_churned_after_trial,
(SELECT COUNT(DISTINCT customer_id) FROM subscriptions) AS total_customer_count,
ROUND((COUNT(DISTINCT customer_id)/(SELECT COUNT(DISTINCT customer_id) FROM subscriptions))*100,0) AS percent_churn_after_trial
FROM row_number_cte
WHERE row_number=2 AND plan_name = 'churn';

-- What is the number and percentage of customer plans after their initial free trial?
-- What is the customer count and percentage breakdown of all 5 plan_name values at 2020-12-31?
-- How many customers have upgraded to an annual plan in 2020?
-- How many days on average does it take for a customer to an annual plan from the day they join Foodie-Fi?
-- Can you further breakdown this average value into 30 day periods (i.e. 0-30 days, 31-60 days etc)
-- How many customers downgraded from a pro monthly to a basic monthly plan in 2020?
